// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matrix_mult.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrix_mult::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrix_mult::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> matrix_mult::ap_ST_fsm_state1 = "1";
const sc_lv<5> matrix_mult::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<5> matrix_mult::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<5> matrix_mult::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<5> matrix_mult::ap_ST_fsm_state12 = "10000";
const sc_lv<32> matrix_mult::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool matrix_mult::ap_const_boolean_1 = true;
const sc_lv<32> matrix_mult::ap_const_lv32_3 = "11";
const bool matrix_mult::ap_const_boolean_0 = false;
const sc_lv<1> matrix_mult::ap_const_lv1_0 = "0";
const sc_lv<32> matrix_mult::ap_const_lv32_1 = "1";
const sc_lv<32> matrix_mult::ap_const_lv32_2 = "10";
const sc_lv<1> matrix_mult::ap_const_lv1_1 = "1";
const sc_lv<5> matrix_mult::ap_const_lv5_0 = "00000";
const sc_lv<3> matrix_mult::ap_const_lv3_0 = "000";
const sc_lv<5> matrix_mult::ap_const_lv5_19 = "11001";
const sc_lv<5> matrix_mult::ap_const_lv5_1 = "1";
const sc_lv<3> matrix_mult::ap_const_lv3_1 = "1";
const sc_lv<3> matrix_mult::ap_const_lv3_5 = "101";
const sc_lv<2> matrix_mult::ap_const_lv2_0 = "00";
const sc_lv<5> matrix_mult::ap_const_lv5_F = "1111";
const sc_lv<5> matrix_mult::ap_const_lv5_14 = "10100";
const sc_lv<6> matrix_mult::ap_const_lv6_3 = "11";
const sc_lv<6> matrix_mult::ap_const_lv6_4 = "100";
const sc_lv<4> matrix_mult::ap_const_lv4_5 = "101";
const sc_lv<6> matrix_mult::ap_const_lv6_1 = "1";
const sc_lv<6> matrix_mult::ap_const_lv6_2 = "10";
const sc_lv<5> matrix_mult::ap_const_lv5_A = "1010";
const sc_lv<32> matrix_mult::ap_const_lv32_4 = "100";

matrix_mult::matrix_mult(sc_module_name name) : sc_module(name), mVcdFile(0) {
    matrix_mult_mac_mbkb_U1 = new matrix_mult_mac_mbkb<1,3,8,8,16,16>("matrix_mult_mac_mbkb_U1");
    matrix_mult_mac_mbkb_U1->clk(ap_clk);
    matrix_mult_mac_mbkb_U1->reset(ap_rst);
    matrix_mult_mac_mbkb_U1->din0(reg_212);
    matrix_mult_mac_mbkb_U1->din1(a_q1);
    matrix_mult_mac_mbkb_U1->din2(tmp_7_4_reg_606);
    matrix_mult_mac_mbkb_U1->ce(ap_var_for_const0);
    matrix_mult_mac_mbkb_U1->dout(grp_fu_456_p3);
    matrix_mult_mac_mbkb_U2 = new matrix_mult_mac_mbkb<1,3,8,8,16,16>("matrix_mult_mac_mbkb_U2");
    matrix_mult_mac_mbkb_U2->clk(ap_clk);
    matrix_mult_mac_mbkb_U2->reset(ap_rst);
    matrix_mult_mac_mbkb_U2->din0(b_load_1_reg_581);
    matrix_mult_mac_mbkb_U2->din1(a_q0);
    matrix_mult_mac_mbkb_U2->din2(tmp_7_reg_611);
    matrix_mult_mac_mbkb_U2->ce(ap_var_for_const0);
    matrix_mult_mac_mbkb_U2->dout(grp_fu_463_p3);
    matrix_mult_mac_mcud_U3 = new matrix_mult_mac_mcud<1,3,8,8,16,16>("matrix_mult_mac_mcud_U3");
    matrix_mult_mac_mcud_U3->clk(ap_clk);
    matrix_mult_mac_mcud_U3->reset(ap_rst);
    matrix_mult_mac_mcud_U3->din0(reg_217);
    matrix_mult_mac_mcud_U3->din1(reg_222);
    matrix_mult_mac_mcud_U3->din2(tmp3_reg_626);
    matrix_mult_mac_mcud_U3->ce(ap_var_for_const0);
    matrix_mult_mac_mcud_U3->dout(grp_fu_470_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_address0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_1_cast_fu_287_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_10_cast_fu_332_p1 );
    sensitive << ( tmp_4_cast_fu_365_p1 );

    SC_METHOD(thread_a_address1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_9_cast_fu_322_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_8_cast_fu_375_p1 );

    SC_METHOD(thread_a_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_a_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage2_iter2);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state6_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state7_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state9_pp0_stage1_iter2);

    SC_METHOD(thread_ap_condition_154);
    sensitive << ( exitcond_flatten_reg_477 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_170);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( exitcond_flatten_reg_477_pp0_iter1_reg );

    SC_METHOD(thread_ap_condition_72);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_ap_condition_92);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_227_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_phi_mux_i_phi_fu_194_p4);
    sensitive << ( i_reg_190 );
    sensitive << ( exitcond_flatten_reg_477 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_mid2_v_reg_495 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_183_p4);
    sensitive << ( indvar_flatten_reg_179 );
    sensitive << ( exitcond_flatten_reg_477 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( indvar_flatten_next_reg_481 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_j_phi_fu_205_p4);
    sensitive << ( j_reg_201 );
    sensitive << ( exitcond_flatten_reg_477 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( j_1_reg_556 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_b_address0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_13_cast_fu_301_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_11_cast_fu_350_p1 );
    sensitive << ( tmp_12_cast_fu_388_p1 );

    SC_METHOD(thread_b_address1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_14_cast_fu_312_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_2_fu_337_p1 );

    SC_METHOD(thread_b_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_b_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_exitcond_flatten_fu_227_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_183_p4 );

    SC_METHOD(thread_exitcond_fu_245_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_227_p2 );
    sensitive << ( ap_phi_mux_j_phi_fu_205_p4 );

    SC_METHOD(thread_i_1_fu_239_p2);
    sensitive << ( ap_phi_mux_i_phi_fu_194_p4 );

    SC_METHOD(thread_indvar_flatten_next_fu_233_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_183_p4 );

    SC_METHOD(thread_j_1_fu_355_p2);
    sensitive << ( j_mid2_reg_486 );

    SC_METHOD(thread_j_mid2_fu_251_p3);
    sensitive << ( ap_phi_mux_j_phi_fu_205_p4 );
    sensitive << ( exitcond_fu_245_p2 );

    SC_METHOD(thread_p_shl_cast_fu_277_p1);
    sensitive << ( tmp_fu_270_p3 );

    SC_METHOD(thread_prod_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_15_cast_fu_452_p1 );

    SC_METHOD(thread_prod_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_prod_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_8_4_reg_641 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_prod_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_reg_477_pp0_iter2_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_tmp_10_cast_fu_332_p1);
    sensitive << ( tmp_s_fu_327_p2 );

    SC_METHOD(thread_tmp_10_fu_344_p2);
    sensitive << ( tmp_2_cast_fu_341_p1 );

    SC_METHOD(thread_tmp_11_cast_fu_350_p1);
    sensitive << ( tmp_10_fu_344_p2 );

    SC_METHOD(thread_tmp_11_fu_383_p2);
    sensitive << ( tmp_2_cast3_reg_516 );

    SC_METHOD(thread_tmp_12_cast_fu_388_p1);
    sensitive << ( tmp_11_fu_383_p2 );

    SC_METHOD(thread_tmp_12_fu_295_p2);
    sensitive << ( tmp_2_cast3_fu_292_p1 );

    SC_METHOD(thread_tmp_13_cast_fu_301_p1);
    sensitive << ( tmp_12_fu_295_p2 );

    SC_METHOD(thread_tmp_13_fu_306_p2);
    sensitive << ( tmp_2_cast3_fu_292_p1 );

    SC_METHOD(thread_tmp_14_cast_fu_312_p1);
    sensitive << ( tmp_13_fu_306_p2 );

    SC_METHOD(thread_tmp_14_fu_393_p2);
    sensitive << ( tmp_1_reg_502 );
    sensitive << ( tmp_2_cast4_fu_380_p1 );

    SC_METHOD(thread_tmp_15_cast_fu_452_p1);
    sensitive << ( tmp_14_reg_576_pp0_iter2_reg );

    SC_METHOD(thread_tmp_1_cast_fu_287_p1);
    sensitive << ( tmp_1_fu_281_p2 );

    SC_METHOD(thread_tmp_1_fu_281_p2);
    sensitive << ( tmp_mid2_cast_fu_267_p1 );
    sensitive << ( p_shl_cast_fu_277_p1 );

    SC_METHOD(thread_tmp_2_cast3_fu_292_p1);
    sensitive << ( j_mid2_reg_486 );

    SC_METHOD(thread_tmp_2_cast4_fu_380_p1);
    sensitive << ( j_mid2_reg_486 );

    SC_METHOD(thread_tmp_2_cast_fu_341_p1);
    sensitive << ( j_mid2_reg_486 );

    SC_METHOD(thread_tmp_2_fu_337_p1);
    sensitive << ( j_mid2_reg_486 );

    SC_METHOD(thread_tmp_4_cast_fu_365_p1);
    sensitive << ( tmp_4_fu_360_p2 );

    SC_METHOD(thread_tmp_4_fu_360_p2);
    sensitive << ( tmp_1_reg_502 );

    SC_METHOD(thread_tmp_7_4_fu_421_p0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( reg_217 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_tmp_7_4_fu_421_p1);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( reg_222 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_tmp_7_4_fu_421_p2);
    sensitive << ( tmp_7_4_fu_421_p0 );
    sensitive << ( tmp_7_4_fu_421_p1 );

    SC_METHOD(thread_tmp_7_fu_434_p0);
    sensitive << ( reg_212 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_tmp_7_fu_434_p1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( a_load_reg_551 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_tmp_7_fu_434_p2);
    sensitive << ( tmp_7_fu_434_p0 );
    sensitive << ( tmp_7_fu_434_p1 );

    SC_METHOD(thread_tmp_8_4_fu_448_p2);
    sensitive << ( tmp1_reg_631 );
    sensitive << ( tmp2_reg_636 );

    SC_METHOD(thread_tmp_8_cast_fu_375_p1);
    sensitive << ( tmp_8_fu_370_p2 );

    SC_METHOD(thread_tmp_8_fu_370_p2);
    sensitive << ( tmp_1_reg_502 );

    SC_METHOD(thread_tmp_9_cast_fu_322_p1);
    sensitive << ( tmp_9_fu_317_p2 );

    SC_METHOD(thread_tmp_9_fu_317_p2);
    sensitive << ( tmp_1_reg_502 );

    SC_METHOD(thread_tmp_fu_270_p3);
    sensitive << ( tmp_mid2_v_reg_495 );

    SC_METHOD(thread_tmp_mid2_cast_fu_267_p1);
    sensitive << ( tmp_mid2_v_reg_495 );

    SC_METHOD(thread_tmp_mid2_v_fu_259_p3);
    sensitive << ( ap_phi_mux_i_phi_fu_194_p4 );
    sensitive << ( exitcond_fu_245_p2 );
    sensitive << ( i_1_fu_239_p2 );

    SC_METHOD(thread_tmp_s_fu_327_p2);
    sensitive << ( tmp_1_reg_502 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_fu_227_p2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage1_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrix_mult_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_address0, "(port)a_address0");
    sc_trace(mVcdFile, a_ce0, "(port)a_ce0");
    sc_trace(mVcdFile, a_q0, "(port)a_q0");
    sc_trace(mVcdFile, a_address1, "(port)a_address1");
    sc_trace(mVcdFile, a_ce1, "(port)a_ce1");
    sc_trace(mVcdFile, a_q1, "(port)a_q1");
    sc_trace(mVcdFile, b_address0, "(port)b_address0");
    sc_trace(mVcdFile, b_ce0, "(port)b_ce0");
    sc_trace(mVcdFile, b_q0, "(port)b_q0");
    sc_trace(mVcdFile, b_address1, "(port)b_address1");
    sc_trace(mVcdFile, b_ce1, "(port)b_ce1");
    sc_trace(mVcdFile, b_q1, "(port)b_q1");
    sc_trace(mVcdFile, prod_address0, "(port)prod_address0");
    sc_trace(mVcdFile, prod_ce0, "(port)prod_ce0");
    sc_trace(mVcdFile, prod_we0, "(port)prod_we0");
    sc_trace(mVcdFile, prod_d0, "(port)prod_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_179, "indvar_flatten_reg_179");
    sc_trace(mVcdFile, i_reg_190, "i_reg_190");
    sc_trace(mVcdFile, j_reg_201, "j_reg_201");
    sc_trace(mVcdFile, reg_212, "reg_212");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage2_iter1, "ap_block_state7_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage2_iter2, "ap_block_state10_pp0_stage2_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, exitcond_flatten_reg_477, "exitcond_flatten_reg_477");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter2, "ap_block_state8_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter3, "ap_block_state11_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, reg_217, "reg_217");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage1_iter1, "ap_block_state6_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage1_iter2, "ap_block_state9_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, exitcond_flatten_reg_477_pp0_iter1_reg, "exitcond_flatten_reg_477_pp0_iter1_reg");
    sc_trace(mVcdFile, reg_222, "reg_222");
    sc_trace(mVcdFile, exitcond_flatten_fu_227_p2, "exitcond_flatten_fu_227_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_477_pp0_iter2_reg, "exitcond_flatten_reg_477_pp0_iter2_reg");
    sc_trace(mVcdFile, indvar_flatten_next_fu_233_p2, "indvar_flatten_next_fu_233_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_481, "indvar_flatten_next_reg_481");
    sc_trace(mVcdFile, j_mid2_fu_251_p3, "j_mid2_fu_251_p3");
    sc_trace(mVcdFile, j_mid2_reg_486, "j_mid2_reg_486");
    sc_trace(mVcdFile, tmp_mid2_v_fu_259_p3, "tmp_mid2_v_fu_259_p3");
    sc_trace(mVcdFile, tmp_mid2_v_reg_495, "tmp_mid2_v_reg_495");
    sc_trace(mVcdFile, tmp_1_fu_281_p2, "tmp_1_fu_281_p2");
    sc_trace(mVcdFile, tmp_1_reg_502, "tmp_1_reg_502");
    sc_trace(mVcdFile, tmp_2_cast3_fu_292_p1, "tmp_2_cast3_fu_292_p1");
    sc_trace(mVcdFile, tmp_2_cast3_reg_516, "tmp_2_cast3_reg_516");
    sc_trace(mVcdFile, a_load_reg_551, "a_load_reg_551");
    sc_trace(mVcdFile, j_1_fu_355_p2, "j_1_fu_355_p2");
    sc_trace(mVcdFile, j_1_reg_556, "j_1_reg_556");
    sc_trace(mVcdFile, tmp_14_fu_393_p2, "tmp_14_fu_393_p2");
    sc_trace(mVcdFile, tmp_14_reg_576, "tmp_14_reg_576");
    sc_trace(mVcdFile, tmp_14_reg_576_pp0_iter2_reg, "tmp_14_reg_576_pp0_iter2_reg");
    sc_trace(mVcdFile, b_load_1_reg_581, "b_load_1_reg_581");
    sc_trace(mVcdFile, tmp_7_4_fu_421_p2, "tmp_7_4_fu_421_p2");
    sc_trace(mVcdFile, tmp_7_4_reg_606, "tmp_7_4_reg_606");
    sc_trace(mVcdFile, tmp_7_fu_434_p2, "tmp_7_fu_434_p2");
    sc_trace(mVcdFile, tmp_7_reg_611, "tmp_7_reg_611");
    sc_trace(mVcdFile, grp_fu_456_p3, "grp_fu_456_p3");
    sc_trace(mVcdFile, tmp3_reg_626, "tmp3_reg_626");
    sc_trace(mVcdFile, grp_fu_463_p3, "grp_fu_463_p3");
    sc_trace(mVcdFile, tmp1_reg_631, "tmp1_reg_631");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, grp_fu_470_p3, "grp_fu_470_p3");
    sc_trace(mVcdFile, tmp2_reg_636, "tmp2_reg_636");
    sc_trace(mVcdFile, tmp_8_4_fu_448_p2, "tmp_8_4_fu_448_p2");
    sc_trace(mVcdFile, tmp_8_4_reg_641, "tmp_8_4_reg_641");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_183_p4, "ap_phi_mux_indvar_flatten_phi_fu_183_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_i_phi_fu_194_p4, "ap_phi_mux_i_phi_fu_194_p4");
    sc_trace(mVcdFile, ap_phi_mux_j_phi_fu_205_p4, "ap_phi_mux_j_phi_fu_205_p4");
    sc_trace(mVcdFile, tmp_1_cast_fu_287_p1, "tmp_1_cast_fu_287_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, tmp_13_cast_fu_301_p1, "tmp_13_cast_fu_301_p1");
    sc_trace(mVcdFile, tmp_14_cast_fu_312_p1, "tmp_14_cast_fu_312_p1");
    sc_trace(mVcdFile, tmp_9_cast_fu_322_p1, "tmp_9_cast_fu_322_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, tmp_10_cast_fu_332_p1, "tmp_10_cast_fu_332_p1");
    sc_trace(mVcdFile, tmp_2_fu_337_p1, "tmp_2_fu_337_p1");
    sc_trace(mVcdFile, tmp_11_cast_fu_350_p1, "tmp_11_cast_fu_350_p1");
    sc_trace(mVcdFile, tmp_4_cast_fu_365_p1, "tmp_4_cast_fu_365_p1");
    sc_trace(mVcdFile, tmp_8_cast_fu_375_p1, "tmp_8_cast_fu_375_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_388_p1, "tmp_12_cast_fu_388_p1");
    sc_trace(mVcdFile, tmp_15_cast_fu_452_p1, "tmp_15_cast_fu_452_p1");
    sc_trace(mVcdFile, exitcond_fu_245_p2, "exitcond_fu_245_p2");
    sc_trace(mVcdFile, i_1_fu_239_p2, "i_1_fu_239_p2");
    sc_trace(mVcdFile, tmp_fu_270_p3, "tmp_fu_270_p3");
    sc_trace(mVcdFile, tmp_mid2_cast_fu_267_p1, "tmp_mid2_cast_fu_267_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_277_p1, "p_shl_cast_fu_277_p1");
    sc_trace(mVcdFile, tmp_12_fu_295_p2, "tmp_12_fu_295_p2");
    sc_trace(mVcdFile, tmp_13_fu_306_p2, "tmp_13_fu_306_p2");
    sc_trace(mVcdFile, tmp_9_fu_317_p2, "tmp_9_fu_317_p2");
    sc_trace(mVcdFile, tmp_s_fu_327_p2, "tmp_s_fu_327_p2");
    sc_trace(mVcdFile, tmp_2_cast_fu_341_p1, "tmp_2_cast_fu_341_p1");
    sc_trace(mVcdFile, tmp_10_fu_344_p2, "tmp_10_fu_344_p2");
    sc_trace(mVcdFile, tmp_4_fu_360_p2, "tmp_4_fu_360_p2");
    sc_trace(mVcdFile, tmp_8_fu_370_p2, "tmp_8_fu_370_p2");
    sc_trace(mVcdFile, tmp_11_fu_383_p2, "tmp_11_fu_383_p2");
    sc_trace(mVcdFile, tmp_2_cast4_fu_380_p1, "tmp_2_cast4_fu_380_p1");
    sc_trace(mVcdFile, tmp_7_4_fu_421_p0, "tmp_7_4_fu_421_p0");
    sc_trace(mVcdFile, tmp_7_4_fu_421_p1, "tmp_7_4_fu_421_p1");
    sc_trace(mVcdFile, tmp_7_fu_434_p0, "tmp_7_fu_434_p0");
    sc_trace(mVcdFile, tmp_7_fu_434_p1, "tmp_7_fu_434_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_72, "ap_condition_72");
    sc_trace(mVcdFile, ap_condition_92, "ap_condition_92");
    sc_trace(mVcdFile, ap_condition_154, "ap_condition_154");
    sc_trace(mVcdFile, ap_condition_170, "ap_condition_170");
#endif

    }
    mHdltvinHandle.open("matrix_mult.hdltvin.dat");
    mHdltvoutHandle.open("matrix_mult.hdltvout.dat");
}

matrix_mult::~matrix_mult() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete matrix_mult_mac_mbkb_U1;
    delete matrix_mult_mac_mbkb_U2;
    delete matrix_mult_mac_mcud_U3;
}

void matrix_mult::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void matrix_mult::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage2_subdone.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()))) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage2_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read())) || 
             (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage2_subdone.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read())))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter3 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_477.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_reg_190 = tmp_mid2_v_reg_495.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_190 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_477.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_reg_179 = indvar_flatten_next_reg_481.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_179 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_477.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        j_reg_201 = j_1_reg_556.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_reg_201 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(exitcond_flatten_reg_477.read(), ap_const_lv1_0)) {
        if (esl_seteq<1,1,1>(ap_condition_92.read(), ap_const_boolean_1)) {
            reg_212 = b_q1.read();
        } else if (esl_seteq<1,1,1>(ap_condition_72.read(), ap_const_boolean_1)) {
            reg_212 = b_q0.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_477_pp0_iter1_reg.read()))) {
        reg_217 = b_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(exitcond_flatten_reg_477.read(), ap_const_lv1_0))) {
        reg_217 = b_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if (esl_seteq<1,1,1>(ap_condition_170.read(), ap_const_boolean_1)) {
            reg_222 = a_q1.read();
        } else if (esl_seteq<1,1,1>(ap_condition_154.read(), ap_const_boolean_1)) {
            reg_222 = a_q0.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_reg_477.read(), ap_const_lv1_0))) {
        a_load_reg_551 = a_q0.read();
        j_1_reg_556 = j_1_fu_355_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_477.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        b_load_1_reg_581 = b_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_477 = exitcond_flatten_fu_227_p2.read();
        exitcond_flatten_reg_477_pp0_iter1_reg = exitcond_flatten_reg_477.read();
        exitcond_flatten_reg_477_pp0_iter2_reg = exitcond_flatten_reg_477_pp0_iter1_reg.read();
        tmp_14_reg_576_pp0_iter2_reg = tmp_14_reg_576.read();
    }
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_next_reg_481 = indvar_flatten_next_fu_233_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_227_p2.read()))) {
        j_mid2_reg_486 = j_mid2_fu_251_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_477_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        tmp1_reg_631 = grp_fu_463_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_477_pp0_iter2_reg.read()))) {
        tmp2_reg_636 = grp_fu_470_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_477_pp0_iter1_reg.read()))) {
        tmp3_reg_626 = grp_fu_456_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_477.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_14_reg_576 = tmp_14_fu_393_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_477.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        tmp_1_reg_502 = tmp_1_fu_281_p2.read();
        tmp_2_cast3_reg_516 = tmp_2_cast3_fu_292_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_477_pp0_iter1_reg.read()))) {
        tmp_7_4_reg_606 = tmp_7_4_fu_421_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_477_pp0_iter1_reg.read()))) {
        tmp_7_reg_611 = tmp_7_fu_434_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_477_pp0_iter2_reg.read()))) {
        tmp_8_4_reg_641 = tmp_8_4_fu_448_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_227_p2.read()))) {
        tmp_mid2_v_reg_495 = tmp_mid2_v_fu_259_p3.read();
    }
}

void matrix_mult::thread_a_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        a_address0 =  (sc_lv<5>) (tmp_4_cast_fu_365_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        a_address0 =  (sc_lv<5>) (tmp_10_cast_fu_332_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        a_address0 =  (sc_lv<5>) (tmp_1_cast_fu_287_p1.read());
    } else {
        a_address0 = "XXXXX";
    }
}

void matrix_mult::thread_a_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        a_address1 =  (sc_lv<5>) (tmp_8_cast_fu_375_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        a_address1 =  (sc_lv<5>) (tmp_9_cast_fu_322_p1.read());
    } else {
        a_address1 = "XXXXX";
    }
}

void matrix_mult::thread_a_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        a_ce0 = ap_const_logic_1;
    } else {
        a_ce0 = ap_const_logic_0;
    }
}

void matrix_mult::thread_a_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        a_ce1 = ap_const_logic_1;
    } else {
        a_ce1 = ap_const_logic_0;
    }
}

void matrix_mult::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void matrix_mult::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void matrix_mult::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void matrix_mult::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void matrix_mult::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[4];
}

void matrix_mult::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_block_state10_pp0_stage2_iter2() {
    ap_block_state10_pp0_stage2_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_block_state11_pp0_stage0_iter3() {
    ap_block_state11_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_block_state6_pp0_stage1_iter1() {
    ap_block_state6_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_block_state7_pp0_stage2_iter1() {
    ap_block_state7_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_block_state8_pp0_stage0_iter2() {
    ap_block_state8_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_block_state9_pp0_stage1_iter2() {
    ap_block_state9_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrix_mult::thread_ap_condition_154() {
    ap_condition_154 = (esl_seteq<1,1,1>(exitcond_flatten_reg_477.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void matrix_mult::thread_ap_condition_170() {
    ap_condition_170 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_477_pp0_iter1_reg.read()));
}

void matrix_mult::thread_ap_condition_72() {
    ap_condition_72 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0));
}

void matrix_mult::thread_ap_condition_92() {
    ap_condition_92 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void matrix_mult::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_227_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void matrix_mult::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrix_mult::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void matrix_mult::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrix_mult::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void matrix_mult::thread_ap_phi_mux_i_phi_fu_194_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_477.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_phi_fu_194_p4 = tmp_mid2_v_reg_495.read();
    } else {
        ap_phi_mux_i_phi_fu_194_p4 = i_reg_190.read();
    }
}

void matrix_mult::thread_ap_phi_mux_indvar_flatten_phi_fu_183_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_477.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_183_p4 = indvar_flatten_next_reg_481.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_183_p4 = indvar_flatten_reg_179.read();
    }
}

void matrix_mult::thread_ap_phi_mux_j_phi_fu_205_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_477.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_j_phi_fu_205_p4 = j_1_reg_556.read();
    } else {
        ap_phi_mux_j_phi_fu_205_p4 = j_reg_201.read();
    }
}

void matrix_mult::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrix_mult::thread_b_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        b_address0 =  (sc_lv<5>) (tmp_12_cast_fu_388_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        b_address0 =  (sc_lv<5>) (tmp_11_cast_fu_350_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        b_address0 =  (sc_lv<5>) (tmp_13_cast_fu_301_p1.read());
    } else {
        b_address0 = "XXXXX";
    }
}

void matrix_mult::thread_b_address1() {
    if (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            b_address1 =  (sc_lv<5>) (tmp_2_fu_337_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            b_address1 =  (sc_lv<5>) (tmp_14_cast_fu_312_p1.read());
        } else {
            b_address1 = "XXXXX";
        }
    } else {
        b_address1 = "XXXXX";
    }
}

void matrix_mult::thread_b_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        b_ce0 = ap_const_logic_1;
    } else {
        b_ce0 = ap_const_logic_0;
    }
}

void matrix_mult::thread_b_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        b_ce1 = ap_const_logic_1;
    } else {
        b_ce1 = ap_const_logic_0;
    }
}

void matrix_mult::thread_exitcond_flatten_fu_227_p2() {
    exitcond_flatten_fu_227_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_183_p4.read().is_01() || !ap_const_lv5_19.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_183_p4.read() == ap_const_lv5_19);
}

void matrix_mult::thread_exitcond_fu_245_p2() {
    exitcond_fu_245_p2 = (!ap_phi_mux_j_phi_fu_205_p4.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_j_phi_fu_205_p4.read() == ap_const_lv3_5);
}

void matrix_mult::thread_i_1_fu_239_p2() {
    i_1_fu_239_p2 = (!ap_phi_mux_i_phi_fu_194_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_i_phi_fu_194_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void matrix_mult::thread_indvar_flatten_next_fu_233_p2() {
    indvar_flatten_next_fu_233_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_183_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ap_phi_mux_indvar_flatten_phi_fu_183_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void matrix_mult::thread_j_1_fu_355_p2() {
    j_1_fu_355_p2 = (!j_mid2_reg_486.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_mid2_reg_486.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void matrix_mult::thread_j_mid2_fu_251_p3() {
    j_mid2_fu_251_p3 = (!exitcond_fu_245_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_fu_245_p2.read()[0].to_bool())? ap_const_lv3_0: ap_phi_mux_j_phi_fu_205_p4.read());
}

void matrix_mult::thread_p_shl_cast_fu_277_p1() {
    p_shl_cast_fu_277_p1 = esl_zext<6,5>(tmp_fu_270_p3.read());
}

void matrix_mult::thread_prod_address0() {
    prod_address0 =  (sc_lv<5>) (tmp_15_cast_fu_452_p1.read());
}

void matrix_mult::thread_prod_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_1))) {
        prod_ce0 = ap_const_logic_1;
    } else {
        prod_ce0 = ap_const_logic_0;
    }
}

void matrix_mult::thread_prod_d0() {
    prod_d0 = tmp_8_4_reg_641.read();
}

void matrix_mult::thread_prod_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_477_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_1))) {
        prod_we0 = ap_const_logic_1;
    } else {
        prod_we0 = ap_const_logic_0;
    }
}

void matrix_mult::thread_tmp_10_cast_fu_332_p1() {
    tmp_10_cast_fu_332_p1 = esl_sext<64,6>(tmp_s_fu_327_p2.read());
}

void matrix_mult::thread_tmp_10_fu_344_p2() {
    tmp_10_fu_344_p2 = (!tmp_2_cast_fu_341_p1.read().is_01() || !ap_const_lv4_5.is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_2_cast_fu_341_p1.read()) + sc_biguint<4>(ap_const_lv4_5));
}

void matrix_mult::thread_tmp_11_cast_fu_350_p1() {
    tmp_11_cast_fu_350_p1 = esl_zext<64,4>(tmp_10_fu_344_p2.read());
}

void matrix_mult::thread_tmp_11_fu_383_p2() {
    tmp_11_fu_383_p2 = (!tmp_2_cast3_reg_516.read().is_01() || !ap_const_lv5_A.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_2_cast3_reg_516.read()) + sc_biguint<5>(ap_const_lv5_A));
}

void matrix_mult::thread_tmp_12_cast_fu_388_p1() {
    tmp_12_cast_fu_388_p1 = esl_zext<64,5>(tmp_11_fu_383_p2.read());
}

void matrix_mult::thread_tmp_12_fu_295_p2() {
    tmp_12_fu_295_p2 = (!tmp_2_cast3_fu_292_p1.read().is_01() || !ap_const_lv5_F.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_2_cast3_fu_292_p1.read()) + sc_biguint<5>(ap_const_lv5_F));
}

void matrix_mult::thread_tmp_13_cast_fu_301_p1() {
    tmp_13_cast_fu_301_p1 = esl_zext<64,5>(tmp_12_fu_295_p2.read());
}

void matrix_mult::thread_tmp_13_fu_306_p2() {
    tmp_13_fu_306_p2 = (!tmp_2_cast3_fu_292_p1.read().is_01() || !ap_const_lv5_14.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_2_cast3_fu_292_p1.read()) + sc_bigint<5>(ap_const_lv5_14));
}

void matrix_mult::thread_tmp_14_cast_fu_312_p1() {
    tmp_14_cast_fu_312_p1 = esl_zext<64,5>(tmp_13_fu_306_p2.read());
}

void matrix_mult::thread_tmp_14_fu_393_p2() {
    tmp_14_fu_393_p2 = (!tmp_1_reg_502.read().is_01() || !tmp_2_cast4_fu_380_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_1_reg_502.read()) + sc_biguint<6>(tmp_2_cast4_fu_380_p1.read()));
}

void matrix_mult::thread_tmp_15_cast_fu_452_p1() {
    tmp_15_cast_fu_452_p1 = esl_zext<64,6>(tmp_14_reg_576_pp0_iter2_reg.read());
}

void matrix_mult::thread_tmp_1_cast_fu_287_p1() {
    tmp_1_cast_fu_287_p1 = esl_zext<64,6>(tmp_1_fu_281_p2.read());
}

void matrix_mult::thread_tmp_1_fu_281_p2() {
    tmp_1_fu_281_p2 = (!tmp_mid2_cast_fu_267_p1.read().is_01() || !p_shl_cast_fu_277_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_mid2_cast_fu_267_p1.read()) + sc_biguint<6>(p_shl_cast_fu_277_p1.read()));
}

void matrix_mult::thread_tmp_2_cast3_fu_292_p1() {
    tmp_2_cast3_fu_292_p1 = esl_zext<5,3>(j_mid2_reg_486.read());
}

void matrix_mult::thread_tmp_2_cast4_fu_380_p1() {
    tmp_2_cast4_fu_380_p1 = esl_zext<6,3>(j_mid2_reg_486.read());
}

void matrix_mult::thread_tmp_2_cast_fu_341_p1() {
    tmp_2_cast_fu_341_p1 = esl_zext<4,3>(j_mid2_reg_486.read());
}

void matrix_mult::thread_tmp_2_fu_337_p1() {
    tmp_2_fu_337_p1 = esl_zext<64,3>(j_mid2_reg_486.read());
}

void matrix_mult::thread_tmp_4_cast_fu_365_p1() {
    tmp_4_cast_fu_365_p1 = esl_zext<64,6>(tmp_4_fu_360_p2.read());
}

void matrix_mult::thread_tmp_4_fu_360_p2() {
    tmp_4_fu_360_p2 = (!tmp_1_reg_502.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_1_reg_502.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void matrix_mult::thread_tmp_7_4_fu_421_p0() {
    tmp_7_4_fu_421_p0 = reg_217.read();
}

void matrix_mult::thread_tmp_7_4_fu_421_p1() {
    tmp_7_4_fu_421_p1 = reg_222.read();
}

void matrix_mult::thread_tmp_7_4_fu_421_p2() {
    tmp_7_4_fu_421_p2 = (!tmp_7_4_fu_421_p0.read().is_01() || !tmp_7_4_fu_421_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(tmp_7_4_fu_421_p0.read()) * sc_bigint<8>(tmp_7_4_fu_421_p1.read());
}

void matrix_mult::thread_tmp_7_fu_434_p0() {
    tmp_7_fu_434_p0 = reg_212.read();
}

void matrix_mult::thread_tmp_7_fu_434_p1() {
    tmp_7_fu_434_p1 = a_load_reg_551.read();
}

void matrix_mult::thread_tmp_7_fu_434_p2() {
    tmp_7_fu_434_p2 = (!tmp_7_fu_434_p0.read().is_01() || !tmp_7_fu_434_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(tmp_7_fu_434_p0.read()) * sc_bigint<8>(tmp_7_fu_434_p1.read());
}

void matrix_mult::thread_tmp_8_4_fu_448_p2() {
    tmp_8_4_fu_448_p2 = (!tmp1_reg_631.read().is_01() || !tmp2_reg_636.read().is_01())? sc_lv<16>(): (sc_bigint<16>(tmp1_reg_631.read()) + sc_bigint<16>(tmp2_reg_636.read()));
}

void matrix_mult::thread_tmp_8_cast_fu_375_p1() {
    tmp_8_cast_fu_375_p1 = esl_sext<64,6>(tmp_8_fu_370_p2.read());
}

void matrix_mult::thread_tmp_8_fu_370_p2() {
    tmp_8_fu_370_p2 = (!tmp_1_reg_502.read().is_01() || !ap_const_lv6_2.is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_1_reg_502.read()) + sc_biguint<6>(ap_const_lv6_2));
}

void matrix_mult::thread_tmp_9_cast_fu_322_p1() {
    tmp_9_cast_fu_322_p1 = esl_sext<64,6>(tmp_9_fu_317_p2.read());
}

void matrix_mult::thread_tmp_9_fu_317_p2() {
    tmp_9_fu_317_p2 = (!tmp_1_reg_502.read().is_01() || !ap_const_lv6_3.is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_1_reg_502.read()) + sc_biguint<6>(ap_const_lv6_3));
}

void matrix_mult::thread_tmp_fu_270_p3() {
    tmp_fu_270_p3 = esl_concat<3,2>(tmp_mid2_v_reg_495.read(), ap_const_lv2_0);
}

void matrix_mult::thread_tmp_mid2_cast_fu_267_p1() {
    tmp_mid2_cast_fu_267_p1 = esl_zext<6,3>(tmp_mid2_v_reg_495.read());
}

void matrix_mult::thread_tmp_mid2_v_fu_259_p3() {
    tmp_mid2_v_fu_259_p3 = (!exitcond_fu_245_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_fu_245_p2.read()[0].to_bool())? i_1_fu_239_p2.read(): ap_phi_mux_i_phi_fu_194_p4.read());
}

void matrix_mult::thread_tmp_s_fu_327_p2() {
    tmp_s_fu_327_p2 = (!tmp_1_reg_502.read().is_01() || !ap_const_lv6_4.is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_1_reg_502.read()) + sc_biguint<6>(ap_const_lv6_4));
}

void matrix_mult::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(exitcond_flatten_fu_227_p2.read(), ap_const_lv1_1)) && !(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if (((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_227_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage2_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

void matrix_mult::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_address0\" :  \"" << a_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_ce0\" :  \"" << a_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_q0\" :  \"" << a_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_address1\" :  \"" << a_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_ce1\" :  \"" << a_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_q1\" :  \"" << a_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_address0\" :  \"" << b_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_ce0\" :  \"" << b_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_q0\" :  \"" << b_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_address1\" :  \"" << b_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_ce1\" :  \"" << b_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_q1\" :  \"" << b_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prod_address0\" :  \"" << prod_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prod_ce0\" :  \"" << prod_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prod_we0\" :  \"" << prod_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prod_d0\" :  \"" << prod_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

